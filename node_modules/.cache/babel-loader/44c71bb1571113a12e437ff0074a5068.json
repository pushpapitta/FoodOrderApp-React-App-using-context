{"ast":null,"code":"var _jsxFileName = \"/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\n//this component want to return a button-an icon,text and a batch to give no.of items in cart\nimport { useContext, useEffect, useState } from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport classes from './HeaderCartButton.module.css';\nimport CartContext from '../../Store/cart-context'; //cartContext object is imported here\n//here on the built-in button,we use built in onClick to hadle the function execution\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  //button animation,useEffect\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext); //for this we are adding another const here,reduce to transform array to single valu o/ p-\n  //for that it takes 2 arguments. 1st is function which will be called for u.2nd argument is \n  //starting value which is 0 here.\n  //the function whic is given as first agrument to reduce() recieves 2 arguments itself\n  //automatically bu js\n\n  const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0); //whenever the cartContext changes,the headercartbutton code will be re-evaluated.\n  //we can now use this to o/p no. of items in cart using const numberOfcartItems above.\n  //object destructuring to pull out the items from cartCtx object\n\n  const {\n    items\n  } = cartCtx;\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n  useEffect(() => {\n    if (cartCtx.items.length === 0) {\n      return;\n    }\n\n    setBtnIsHighlighted(true);\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeaderCartButton, \"mY+PPfE43aeTZpe9F3TN9SbH6iI=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/Layout/HeaderCartButton.js"],"names":["useContext","useEffect","useState","CartIcon","classes","CartContext","HeaderCartButton","props","btnIsHighlighted","setBtnIsHighlighted","cartCtx","numberOfCartItems","items","reduce","curNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge"],"mappings":";;;AAAA;AAEA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;AAEA;;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMQ,OAAO,GAAGV,UAAU,CAACK,WAAD,CAA1B,CAHgC,CAKhC;AACA;AACA;AACA;AACA;;AAEA,QAAMM,iBAAiB,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAChE,WAAOD,SAAS,GAAGC,IAAI,CAACC,MAAxB;AACH,GAFyB,EAEvB,CAFuB,CAA1B,CAXgC,CAehC;AACA;AACA;;AACA,QAAM;AAAEJ,IAAAA;AAAF,MAAYF,OAAlB;AACA,QAAMO,UAAU,GAAI,GAAEb,OAAO,CAACc,MAAO,IAAGV,gBAAgB,GAAGJ,OAAO,CAACe,IAAX,GAAkB,EAAG,EAA7E;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,OAAO,CAACE,KAAR,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AAC5B;AACH;;AACDX,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,UAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3Bb,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,KAFuB,EAErB,GAFqB,CAAxB;AAIA,WAAO,MAAM;AACTc,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH,KAFD;AAGH,GAZQ,EAYN,CAACT,KAAD,CAZM,CAAT;AAaA,sBACI;AAAQ,IAAA,SAAS,EAAEK,UAAnB;AAA+B,IAAA,OAAO,EAAEV,KAAK,CAACiB,OAA9C;AAAA,4BACI;AAAM,MAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAzB;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAM,MAAA,SAAS,EAAErB,OAAO,CAACsB,KAAzB;AAAA,gBAAiCf;AAAjC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1CD;;GAAML,gB;;KAAAA,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["//this component want to return a button-an icon,text and a batch to give no.of items in cart\n\nimport { useContext, useEffect, useState } from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport classes from './HeaderCartButton.module.css';\nimport CartContext from '../../Store/cart-context';\n//cartContext object is imported here\n\n//here on the built-in button,we use built in onClick to hadle the function execution\n\nconst HeaderCartButton = (props) => {\n    //button animation,useEffect\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n    const cartCtx = useContext(CartContext);\n\n    //for this we are adding another const here,reduce to transform array to single valu o/ p-\n    //for that it takes 2 arguments. 1st is function which will be called for u.2nd argument is \n    //starting value which is 0 here.\n    //the function whic is given as first agrument to reduce() recieves 2 arguments itself\n    //automatically bu js\n\n    const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n        return curNumber + item.amount;\n    }, 0);\n\n    //whenever the cartContext changes,the headercartbutton code will be re-evaluated.\n    //we can now use this to o/p no. of items in cart using const numberOfcartItems above.\n    //object destructuring to pull out the items from cartCtx object\n    const { items } = cartCtx;\n    const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n    useEffect(() => {\n        if (cartCtx.items.length === 0) {\n            return;\n        }\n        setBtnIsHighlighted(true);\n        const timer = setTimeout(() => {\n            setBtnIsHighlighted(false);\n        }, 300);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [items]);\n    return (\n        <button className={btnClasses} onClick={props.onClick}>\n            <span className={classes.icon}>\n                <CartIcon />\n            </span>\n            <span>Your Cart</span>\n            <span className={classes.badge}>{numberOfCartItems}</span>\n        </button>\n    );\n};\n\nexport default HeaderCartButton;"]},"metadata":{},"sourceType":"module"}