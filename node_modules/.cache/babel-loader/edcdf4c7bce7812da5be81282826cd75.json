{"ast":null,"code":"var _jsxFileName = \"/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\n//which allows mealItems to add to the cart\nimport { useRef, useState } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css'; //here we will render a form which will have input and a button\n//input will be wrapped in a seperate component(re-usable)\n//all below are the defaults which u can add to input.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  //to check whether the form is valid or not\n  const [amountIsValid, setAmountIsValid] = useState(true); //this will be passed to ref prop in Input,since the Input is custom component,some extra work\n  //is needed\n\n  const amountInputRef = useRef(); //we want to extract the amount,for that we r using ref's\n  //const enteredAmount = amountInputRef.current.value;\n  //const enteredAmountNumber = +enteredAmount;(converting a string number to number number)\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    classname: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter a valid amount(1-5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/Meals/MealItem/MealItemForm.js"],"names":["useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD,CAH4B,CAI5B;AACA;;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B,CAN4B,CAO5B;AACA;AACA;;AACA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QAAIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAF1B,EAE6B;AACzBR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACH;;AACDF,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACH,GAbD;;AAcA,sBAAO;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACgB,IAAzB;AAA+B,IAAA,QAAQ,EAAEV,aAAzC;AAAA,4BACH,QAAC,KAAD;AAAO,MAAA,GAAG,EAAED,cAAZ;AACI,MAAA,KAAK,EAAC,QADV;AAEI,MAAA,KAAK,EAAE;AAEHY,QAAAA,EAAE,EAAE,YAAYf,KAAK,CAACe,EAFnB;AAGHC,QAAAA,IAAI,EAAE,QAHH;AAIHC,QAAAA,GAAG,EAAE,GAJF;AAKHC,QAAAA,GAAG,EAAE,GALF;AAMHC,QAAAA,IAAI,EAAE,GANH;AAOHC,QAAAA,YAAY,EAAE;AAPX;AAFX;AAAA;AAAA;AAAA;AAAA,YADG,eAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdG,EAeF,CAACnB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBH,CAzCD;;GAAMF,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["//which allows mealItems to add to the cart\n\nimport { useRef, useState } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\n\n//here we will render a form which will have input and a button\n//input will be wrapped in a seperate component(re-usable)\n//all below are the defaults which u can add to input.\n\nconst MealItemForm = (props) => {\n\n    //to check whether the form is valid or not\n    const [amountIsValid, setAmountIsValid] = useState(true);\n    //this will be passed to ref prop in Input,since the Input is custom component,some extra work\n    //is needed\n    const amountInputRef = useRef();\n    //we want to extract the amount,for that we r using ref's\n    //const enteredAmount = amountInputRef.current.value;\n    //const enteredAmountNumber = +enteredAmount;(converting a string number to number number)\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const enteredAmount = amountInputRef.current.value;\n        const enteredAmountNumber = +enteredAmount;\n\n        if (enteredAmount.trim().length === 0 ||\n            enteredAmountNumber < 1 ||\n            enteredAmountNumber > 5) {\n            setAmountIsValid(false);\n            return;\n        }\n        props.onAddToCart(enteredAmountNumber);\n    };\n    return <form classname={classes.form} onSubmit={submitHandler}>\n        <Input ref={amountInputRef}\n            label='Amount'\n            input={{\n\n                id: 'amount_' + props.id,\n                type: 'number',\n                min: '1',\n                max: '5',\n                step: '1',\n                defaultValue: '1'\n\n            }}\n        />\n        <button >+ Add</button>\n        {!amountIsValid && <p>Enter a valid amount(1-5)</p>}\n    </form>\n};\nexport default MealItemForm;"]},"metadata":{},"sourceType":"module"}