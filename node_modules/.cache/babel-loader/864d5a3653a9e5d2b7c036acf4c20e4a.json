{"ast":null,"code":"var _jsxFileName = \"/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/UI/Modal.js\";\nimport classes from './Modal.module.css';\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom'; //we want to use react portal for both backdrop and overlay and we want to render the model overlay itself\n//to make sure that html code for backdrop and overlay is not over all placesin the final application\n//we are using portals\n//now this will be above root element.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Backdrop = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.backdrop\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Backdrop;\n\nconst ModalOverlay = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}; //2 dynamic expressions side by side and call create prtal method biult into react\n//createPortal requires a second argument i.e) where to portal it?\n\n\n_c2 = ModalOverlay;\nconst portalElement = document.getElementById('overlays');\n\nconst Modal = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }, this), portalElement), /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }, this), portalElement)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Modal;\nexport default Modal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Backdrop\");\n$RefreshReg$(_c2, \"ModalOverlay\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"sources":["/Users/shanthakumarpitta/Downloads/FoodOrderApp/src/Components/UI/Modal.js"],"names":["classes","Fragment","ReactDOM","Backdrop","props","backdrop","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","createPortal"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,sBAAO;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;KAAMF,Q;;AAKN,MAAMG,YAAY,GAAGF,KAAK,IAAI;AAC1B,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACO,KAAxB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACQ,OAAxB;AAAA,gBAAkCJ,KAAK,CAACK;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND,C,CAQA;AACA;;;MATMH,Y;AAWN,MAAMI,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAtB;;AAEA,MAAMC,KAAK,GAAIT,KAAD,IAAW;AACrB,sBACI,QAAC,QAAD;AAAA,4BACKF,QAAQ,CAACY,YAAT,eAAsB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAtB,EAAoCJ,aAApC,CADL,eAEKR,QAAQ,CAACY,YAAT,eAAsB,QAAC,YAAD;AAAA,gBAAeV,KAAK,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,YAAtB,EAAqEC,aAArE,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;MAAMG,K;AAQN,eAAeA,KAAf","sourcesContent":["import classes from './Modal.module.css';\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n//we want to use react portal for both backdrop and overlay and we want to render the model overlay itself\n//to make sure that html code for backdrop and overlay is not over all placesin the final application\n//we are using portals\n//now this will be above root element.\nconst Backdrop = props => {\n    return <div className={classes.backdrop} />\n};\n\n\nconst ModalOverlay = props => {\n    return (\n        <div className={classes.modal} >\n            <div className={classes.content}>{props.children}</div>\n        </div>\n    );\n};\n\n//2 dynamic expressions side by side and call create prtal method biult into react\n//createPortal requires a second argument i.e) where to portal it?\n\nconst portalElement = document.getElementById('overlays');\n\nconst Modal = (props) => {\n    return (\n        <Fragment>\n            {ReactDOM.createPortal(<Backdrop />, portalElement)}\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalElement)}\n        </Fragment>\n    );\n};\nexport default Modal;"]},"metadata":{},"sourceType":"module"}